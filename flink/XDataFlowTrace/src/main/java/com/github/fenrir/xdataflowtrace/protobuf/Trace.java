package com.github.fenrir.xdataflowtrace.protobuf;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trace.proto

public final class Trace {
  private Trace() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SubCallOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SubCall)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string subcall_uuid = 1;</code>
     * @return The subcallUuid.
     */
    String getSubcallUuid();
    /**
     * <code>string subcall_uuid = 1;</code>
     * @return The bytes for subcallUuid.
     */
    com.google.protobuf.ByteString
        getSubcallUuidBytes();

    /**
     * <code>double start_time_unix_nano = 2;</code>
     * @return The startTimeUnixNano.
     */
    double getStartTimeUnixNano();

    /**
     * <code>double end_time_unix_nano = 3;</code>
     * @return The endTimeUnixNano.
     */
    double getEndTimeUnixNano();

    /**
     * <code>string service_name = 4;</code>
     * @return The serviceName.
     */
    String getServiceName();
    /**
     * <code>string service_name = 4;</code>
     * @return The bytes for serviceName.
     */
    com.google.protobuf.ByteString
        getServiceNameBytes();

    /**
     * <code>string interface_name = 5;</code>
     * @return The interfaceName.
     */
    String getInterfaceName();
    /**
     * <code>string interface_name = 5;</code>
     * @return The bytes for interfaceName.
     */
    com.google.protobuf.ByteString
        getInterfaceNameBytes();

    /**
     * <code>string interface_uri = 6;</code>
     * @return The interfaceUri.
     */
    String getInterfaceUri();
    /**
     * <code>string interface_uri = 6;</code>
     * @return The bytes for interfaceUri.
     */
    com.google.protobuf.ByteString
        getInterfaceUriBytes();
  }
  /**
   * Protobuf type {@code SubCall}
   */
  public static final class SubCall extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SubCall)
      SubCallOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SubCall.newBuilder() to construct.
    private SubCall(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SubCall() {
      subcallUuid_ = "";
      serviceName_ = "";
      interfaceName_ = "";
      interfaceUri_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new SubCall();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SubCall(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              subcallUuid_ = s;
              break;
            }
            case 17: {

              startTimeUnixNano_ = input.readDouble();
              break;
            }
            case 25: {

              endTimeUnixNano_ = input.readDouble();
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              serviceName_ = s;
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              interfaceName_ = s;
              break;
            }
            case 50: {
              String s = input.readStringRequireUtf8();

              interfaceUri_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Trace.internal_static_SubCall_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Trace.internal_static_SubCall_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SubCall.class, Builder.class);
    }

    public static final int SUBCALL_UUID_FIELD_NUMBER = 1;
    private volatile Object subcallUuid_;
    /**
     * <code>string subcall_uuid = 1;</code>
     * @return The subcallUuid.
     */
    @Override
    public String getSubcallUuid() {
      Object ref = subcallUuid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        subcallUuid_ = s;
        return s;
      }
    }
    /**
     * <code>string subcall_uuid = 1;</code>
     * @return The bytes for subcallUuid.
     */
    @Override
    public com.google.protobuf.ByteString
        getSubcallUuidBytes() {
      Object ref = subcallUuid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        subcallUuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int START_TIME_UNIX_NANO_FIELD_NUMBER = 2;
    private double startTimeUnixNano_;
    /**
     * <code>double start_time_unix_nano = 2;</code>
     * @return The startTimeUnixNano.
     */
    @Override
    public double getStartTimeUnixNano() {
      return startTimeUnixNano_;
    }

    public static final int END_TIME_UNIX_NANO_FIELD_NUMBER = 3;
    private double endTimeUnixNano_;
    /**
     * <code>double end_time_unix_nano = 3;</code>
     * @return The endTimeUnixNano.
     */
    @Override
    public double getEndTimeUnixNano() {
      return endTimeUnixNano_;
    }

    public static final int SERVICE_NAME_FIELD_NUMBER = 4;
    private volatile Object serviceName_;
    /**
     * <code>string service_name = 4;</code>
     * @return The serviceName.
     */
    @Override
    public String getServiceName() {
      Object ref = serviceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        serviceName_ = s;
        return s;
      }
    }
    /**
     * <code>string service_name = 4;</code>
     * @return The bytes for serviceName.
     */
    @Override
    public com.google.protobuf.ByteString
        getServiceNameBytes() {
      Object ref = serviceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        serviceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INTERFACE_NAME_FIELD_NUMBER = 5;
    private volatile Object interfaceName_;
    /**
     * <code>string interface_name = 5;</code>
     * @return The interfaceName.
     */
    @Override
    public String getInterfaceName() {
      Object ref = interfaceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        interfaceName_ = s;
        return s;
      }
    }
    /**
     * <code>string interface_name = 5;</code>
     * @return The bytes for interfaceName.
     */
    @Override
    public com.google.protobuf.ByteString
        getInterfaceNameBytes() {
      Object ref = interfaceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        interfaceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INTERFACE_URI_FIELD_NUMBER = 6;
    private volatile Object interfaceUri_;
    /**
     * <code>string interface_uri = 6;</code>
     * @return The interfaceUri.
     */
    @Override
    public String getInterfaceUri() {
      Object ref = interfaceUri_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        interfaceUri_ = s;
        return s;
      }
    }
    /**
     * <code>string interface_uri = 6;</code>
     * @return The bytes for interfaceUri.
     */
    @Override
    public com.google.protobuf.ByteString
        getInterfaceUriBytes() {
      Object ref = interfaceUri_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        interfaceUri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(subcallUuid_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, subcallUuid_);
      }
      if (Double.doubleToRawLongBits(startTimeUnixNano_) != 0) {
        output.writeDouble(2, startTimeUnixNano_);
      }
      if (Double.doubleToRawLongBits(endTimeUnixNano_) != 0) {
        output.writeDouble(3, endTimeUnixNano_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, serviceName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(interfaceName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, interfaceName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(interfaceUri_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, interfaceUri_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(subcallUuid_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, subcallUuid_);
      }
      if (Double.doubleToRawLongBits(startTimeUnixNano_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, startTimeUnixNano_);
      }
      if (Double.doubleToRawLongBits(endTimeUnixNano_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, endTimeUnixNano_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, serviceName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(interfaceName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, interfaceName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(interfaceUri_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, interfaceUri_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SubCall)) {
        return super.equals(obj);
      }
      SubCall other = (SubCall) obj;

      if (!getSubcallUuid()
          .equals(other.getSubcallUuid())) return false;
      if (Double.doubleToLongBits(getStartTimeUnixNano())
          != Double.doubleToLongBits(
              other.getStartTimeUnixNano())) return false;
      if (Double.doubleToLongBits(getEndTimeUnixNano())
          != Double.doubleToLongBits(
              other.getEndTimeUnixNano())) return false;
      if (!getServiceName()
          .equals(other.getServiceName())) return false;
      if (!getInterfaceName()
          .equals(other.getInterfaceName())) return false;
      if (!getInterfaceUri()
          .equals(other.getInterfaceUri())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SUBCALL_UUID_FIELD_NUMBER;
      hash = (53 * hash) + getSubcallUuid().hashCode();
      hash = (37 * hash) + START_TIME_UNIX_NANO_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getStartTimeUnixNano()));
      hash = (37 * hash) + END_TIME_UNIX_NANO_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getEndTimeUnixNano()));
      hash = (37 * hash) + SERVICE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getServiceName().hashCode();
      hash = (37 * hash) + INTERFACE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getInterfaceName().hashCode();
      hash = (37 * hash) + INTERFACE_URI_FIELD_NUMBER;
      hash = (53 * hash) + getInterfaceUri().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SubCall parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SubCall parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SubCall parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SubCall parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SubCall parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SubCall parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SubCall parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SubCall parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SubCall parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SubCall parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SubCall parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SubCall parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SubCall prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SubCall}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SubCall)
        SubCallOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Trace.internal_static_SubCall_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Trace.internal_static_SubCall_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SubCall.class, Builder.class);
      }

      // Construct using Trace.SubCall.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        subcallUuid_ = "";

        startTimeUnixNano_ = 0D;

        endTimeUnixNano_ = 0D;

        serviceName_ = "";

        interfaceName_ = "";

        interfaceUri_ = "";

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Trace.internal_static_SubCall_descriptor;
      }

      @Override
      public SubCall getDefaultInstanceForType() {
        return SubCall.getDefaultInstance();
      }

      @Override
      public SubCall build() {
        SubCall result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public SubCall buildPartial() {
        SubCall result = new SubCall(this);
        result.subcallUuid_ = subcallUuid_;
        result.startTimeUnixNano_ = startTimeUnixNano_;
        result.endTimeUnixNano_ = endTimeUnixNano_;
        result.serviceName_ = serviceName_;
        result.interfaceName_ = interfaceName_;
        result.interfaceUri_ = interfaceUri_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SubCall) {
          return mergeFrom((SubCall)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SubCall other) {
        if (other == SubCall.getDefaultInstance()) return this;
        if (!other.getSubcallUuid().isEmpty()) {
          subcallUuid_ = other.subcallUuid_;
          onChanged();
        }
        if (other.getStartTimeUnixNano() != 0D) {
          setStartTimeUnixNano(other.getStartTimeUnixNano());
        }
        if (other.getEndTimeUnixNano() != 0D) {
          setEndTimeUnixNano(other.getEndTimeUnixNano());
        }
        if (!other.getServiceName().isEmpty()) {
          serviceName_ = other.serviceName_;
          onChanged();
        }
        if (!other.getInterfaceName().isEmpty()) {
          interfaceName_ = other.interfaceName_;
          onChanged();
        }
        if (!other.getInterfaceUri().isEmpty()) {
          interfaceUri_ = other.interfaceUri_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SubCall parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SubCall) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object subcallUuid_ = "";
      /**
       * <code>string subcall_uuid = 1;</code>
       * @return The subcallUuid.
       */
      public String getSubcallUuid() {
        Object ref = subcallUuid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          subcallUuid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string subcall_uuid = 1;</code>
       * @return The bytes for subcallUuid.
       */
      public com.google.protobuf.ByteString
          getSubcallUuidBytes() {
        Object ref = subcallUuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          subcallUuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string subcall_uuid = 1;</code>
       * @param value The subcallUuid to set.
       * @return This builder for chaining.
       */
      public Builder setSubcallUuid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        subcallUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string subcall_uuid = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubcallUuid() {
        
        subcallUuid_ = getDefaultInstance().getSubcallUuid();
        onChanged();
        return this;
      }
      /**
       * <code>string subcall_uuid = 1;</code>
       * @param value The bytes for subcallUuid to set.
       * @return This builder for chaining.
       */
      public Builder setSubcallUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        subcallUuid_ = value;
        onChanged();
        return this;
      }

      private double startTimeUnixNano_ ;
      /**
       * <code>double start_time_unix_nano = 2;</code>
       * @return The startTimeUnixNano.
       */
      @Override
      public double getStartTimeUnixNano() {
        return startTimeUnixNano_;
      }
      /**
       * <code>double start_time_unix_nano = 2;</code>
       * @param value The startTimeUnixNano to set.
       * @return This builder for chaining.
       */
      public Builder setStartTimeUnixNano(double value) {
        
        startTimeUnixNano_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double start_time_unix_nano = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartTimeUnixNano() {
        
        startTimeUnixNano_ = 0D;
        onChanged();
        return this;
      }

      private double endTimeUnixNano_ ;
      /**
       * <code>double end_time_unix_nano = 3;</code>
       * @return The endTimeUnixNano.
       */
      @Override
      public double getEndTimeUnixNano() {
        return endTimeUnixNano_;
      }
      /**
       * <code>double end_time_unix_nano = 3;</code>
       * @param value The endTimeUnixNano to set.
       * @return This builder for chaining.
       */
      public Builder setEndTimeUnixNano(double value) {
        
        endTimeUnixNano_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double end_time_unix_nano = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndTimeUnixNano() {
        
        endTimeUnixNano_ = 0D;
        onChanged();
        return this;
      }

      private Object serviceName_ = "";
      /**
       * <code>string service_name = 4;</code>
       * @return The serviceName.
       */
      public String getServiceName() {
        Object ref = serviceName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          serviceName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string service_name = 4;</code>
       * @return The bytes for serviceName.
       */
      public com.google.protobuf.ByteString
          getServiceNameBytes() {
        Object ref = serviceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          serviceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string service_name = 4;</code>
       * @param value The serviceName to set.
       * @return This builder for chaining.
       */
      public Builder setServiceName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serviceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string service_name = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearServiceName() {
        
        serviceName_ = getDefaultInstance().getServiceName();
        onChanged();
        return this;
      }
      /**
       * <code>string service_name = 4;</code>
       * @param value The bytes for serviceName to set.
       * @return This builder for chaining.
       */
      public Builder setServiceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        serviceName_ = value;
        onChanged();
        return this;
      }

      private Object interfaceName_ = "";
      /**
       * <code>string interface_name = 5;</code>
       * @return The interfaceName.
       */
      public String getInterfaceName() {
        Object ref = interfaceName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          interfaceName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string interface_name = 5;</code>
       * @return The bytes for interfaceName.
       */
      public com.google.protobuf.ByteString
          getInterfaceNameBytes() {
        Object ref = interfaceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          interfaceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string interface_name = 5;</code>
       * @param value The interfaceName to set.
       * @return This builder for chaining.
       */
      public Builder setInterfaceName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        interfaceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string interface_name = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearInterfaceName() {
        
        interfaceName_ = getDefaultInstance().getInterfaceName();
        onChanged();
        return this;
      }
      /**
       * <code>string interface_name = 5;</code>
       * @param value The bytes for interfaceName to set.
       * @return This builder for chaining.
       */
      public Builder setInterfaceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        interfaceName_ = value;
        onChanged();
        return this;
      }

      private Object interfaceUri_ = "";
      /**
       * <code>string interface_uri = 6;</code>
       * @return The interfaceUri.
       */
      public String getInterfaceUri() {
        Object ref = interfaceUri_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          interfaceUri_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string interface_uri = 6;</code>
       * @return The bytes for interfaceUri.
       */
      public com.google.protobuf.ByteString
          getInterfaceUriBytes() {
        Object ref = interfaceUri_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          interfaceUri_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string interface_uri = 6;</code>
       * @param value The interfaceUri to set.
       * @return This builder for chaining.
       */
      public Builder setInterfaceUri(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        interfaceUri_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string interface_uri = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearInterfaceUri() {
        
        interfaceUri_ = getDefaultInstance().getInterfaceUri();
        onChanged();
        return this;
      }
      /**
       * <code>string interface_uri = 6;</code>
       * @param value The bytes for interfaceUri to set.
       * @return This builder for chaining.
       */
      public Builder setInterfaceUriBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        interfaceUri_ = value;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SubCall)
    }

    // @@protoc_insertion_point(class_scope:SubCall)
    private static final SubCall DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SubCall();
    }

    public static SubCall getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SubCall>
        PARSER = new com.google.protobuf.AbstractParser<SubCall>() {
      @Override
      public SubCall parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SubCall(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SubCall> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SubCall> getParserForType() {
      return PARSER;
    }

    @Override
    public SubCall getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SpanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Span)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string trace_id = 1;</code>
     * @return The traceId.
     */
    String getTraceId();
    /**
     * <code>string trace_id = 1;</code>
     * @return The bytes for traceId.
     */
    com.google.protobuf.ByteString
        getTraceIdBytes();

    /**
     * <code>string span_id = 2;</code>
     * @return The spanId.
     */
    String getSpanId();
    /**
     * <code>string span_id = 2;</code>
     * @return The bytes for spanId.
     */
    com.google.protobuf.ByteString
        getSpanIdBytes();

    /**
     * <code>string parent_span_id = 3;</code>
     * @return The parentSpanId.
     */
    String getParentSpanId();
    /**
     * <code>string parent_span_id = 3;</code>
     * @return The bytes for parentSpanId.
     */
    com.google.protobuf.ByteString
        getParentSpanIdBytes();

    /**
     * <code>string instance_uuid = 4;</code>
     * @return The instanceUuid.
     */
    String getInstanceUuid();
    /**
     * <code>string instance_uuid = 4;</code>
     * @return The bytes for instanceUuid.
     */
    com.google.protobuf.ByteString
        getInstanceUuidBytes();

    /**
     * <code>double start_time_unix_nano = 5;</code>
     * @return The startTimeUnixNano.
     */
    double getStartTimeUnixNano();

    /**
     * <code>double end_time_unix_nano = 6;</code>
     * @return The endTimeUnixNano.
     */
    double getEndTimeUnixNano();

    /**
     * <code>string service_name = 7;</code>
     * @return The serviceName.
     */
    String getServiceName();
    /**
     * <code>string service_name = 7;</code>
     * @return The bytes for serviceName.
     */
    com.google.protobuf.ByteString
        getServiceNameBytes();

    /**
     * <code>string interface_name = 8;</code>
     * @return The interfaceName.
     */
    String getInterfaceName();
    /**
     * <code>string interface_name = 8;</code>
     * @return The bytes for interfaceName.
     */
    com.google.protobuf.ByteString
        getInterfaceNameBytes();

    /**
     * <code>string interface_uri = 9;</code>
     * @return The interfaceUri.
     */
    String getInterfaceUri();
    /**
     * <code>string interface_uri = 9;</code>
     * @return The bytes for interfaceUri.
     */
    com.google.protobuf.ByteString
        getInterfaceUriBytes();

    /**
     * <code>string kind = 10;</code>
     * @return The kind.
     */
    String getKind();
    /**
     * <code>string kind = 10;</code>
     * @return The bytes for kind.
     */
    com.google.protobuf.ByteString
        getKindBytes();

    /**
     * <code>optional string subcall_uuid = 11;</code>
     * @return Whether the subcallUuid field is set.
     */
    boolean hasSubcallUuid();
    /**
     * <code>optional string subcall_uuid = 11;</code>
     * @return The subcallUuid.
     */
    String getSubcallUuid();
    /**
     * <code>optional string subcall_uuid = 11;</code>
     * @return The bytes for subcallUuid.
     */
    com.google.protobuf.ByteString
        getSubcallUuidBytes();

    /**
     * <code>repeated .SubCall subcalls = 16;</code>
     */
    java.util.List<SubCall>
        getSubcallsList();
    /**
     * <code>repeated .SubCall subcalls = 16;</code>
     */
    SubCall getSubcalls(int index);
    /**
     * <code>repeated .SubCall subcalls = 16;</code>
     */
    int getSubcallsCount();
    /**
     * <code>repeated .SubCall subcalls = 16;</code>
     */
    java.util.List<? extends SubCallOrBuilder>
        getSubcallsOrBuilderList();
    /**
     * <code>repeated .SubCall subcalls = 16;</code>
     */
    SubCallOrBuilder getSubcallsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Span}
   */
  public static final class Span extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Span)
      SpanOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Span.newBuilder() to construct.
    private Span(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Span() {
      traceId_ = "";
      spanId_ = "";
      parentSpanId_ = "";
      instanceUuid_ = "";
      serviceName_ = "";
      interfaceName_ = "";
      interfaceUri_ = "";
      kind_ = "";
      subcallUuid_ = "";
      subcalls_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new Span();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Span(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              traceId_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              spanId_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              parentSpanId_ = s;
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              instanceUuid_ = s;
              break;
            }
            case 41: {

              startTimeUnixNano_ = input.readDouble();
              break;
            }
            case 49: {

              endTimeUnixNano_ = input.readDouble();
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();

              serviceName_ = s;
              break;
            }
            case 66: {
              String s = input.readStringRequireUtf8();

              interfaceName_ = s;
              break;
            }
            case 74: {
              String s = input.readStringRequireUtf8();

              interfaceUri_ = s;
              break;
            }
            case 82: {
              String s = input.readStringRequireUtf8();

              kind_ = s;
              break;
            }
            case 90: {
              String s = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              subcallUuid_ = s;
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                subcalls_ = new java.util.ArrayList<SubCall>();
                mutable_bitField0_ |= 0x00000002;
              }
              subcalls_.add(
                  input.readMessage(SubCall.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          subcalls_ = java.util.Collections.unmodifiableList(subcalls_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Trace.internal_static_Span_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Trace.internal_static_Span_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Span.class, Builder.class);
    }

    private int bitField0_;
    public static final int TRACE_ID_FIELD_NUMBER = 1;
    private volatile Object traceId_;
    /**
     * <code>string trace_id = 1;</code>
     * @return The traceId.
     */
    @Override
    public String getTraceId() {
      Object ref = traceId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        traceId_ = s;
        return s;
      }
    }
    /**
     * <code>string trace_id = 1;</code>
     * @return The bytes for traceId.
     */
    @Override
    public com.google.protobuf.ByteString
        getTraceIdBytes() {
      Object ref = traceId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        traceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SPAN_ID_FIELD_NUMBER = 2;
    private volatile Object spanId_;
    /**
     * <code>string span_id = 2;</code>
     * @return The spanId.
     */
    @Override
    public String getSpanId() {
      Object ref = spanId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        spanId_ = s;
        return s;
      }
    }
    /**
     * <code>string span_id = 2;</code>
     * @return The bytes for spanId.
     */
    @Override
    public com.google.protobuf.ByteString
        getSpanIdBytes() {
      Object ref = spanId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        spanId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARENT_SPAN_ID_FIELD_NUMBER = 3;
    private volatile Object parentSpanId_;
    /**
     * <code>string parent_span_id = 3;</code>
     * @return The parentSpanId.
     */
    @Override
    public String getParentSpanId() {
      Object ref = parentSpanId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        parentSpanId_ = s;
        return s;
      }
    }
    /**
     * <code>string parent_span_id = 3;</code>
     * @return The bytes for parentSpanId.
     */
    @Override
    public com.google.protobuf.ByteString
        getParentSpanIdBytes() {
      Object ref = parentSpanId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        parentSpanId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INSTANCE_UUID_FIELD_NUMBER = 4;
    private volatile Object instanceUuid_;
    /**
     * <code>string instance_uuid = 4;</code>
     * @return The instanceUuid.
     */
    @Override
    public String getInstanceUuid() {
      Object ref = instanceUuid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        instanceUuid_ = s;
        return s;
      }
    }
    /**
     * <code>string instance_uuid = 4;</code>
     * @return The bytes for instanceUuid.
     */
    @Override
    public com.google.protobuf.ByteString
        getInstanceUuidBytes() {
      Object ref = instanceUuid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        instanceUuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int START_TIME_UNIX_NANO_FIELD_NUMBER = 5;
    private double startTimeUnixNano_;
    /**
     * <code>double start_time_unix_nano = 5;</code>
     * @return The startTimeUnixNano.
     */
    @Override
    public double getStartTimeUnixNano() {
      return startTimeUnixNano_;
    }

    public static final int END_TIME_UNIX_NANO_FIELD_NUMBER = 6;
    private double endTimeUnixNano_;
    /**
     * <code>double end_time_unix_nano = 6;</code>
     * @return The endTimeUnixNano.
     */
    @Override
    public double getEndTimeUnixNano() {
      return endTimeUnixNano_;
    }

    public static final int SERVICE_NAME_FIELD_NUMBER = 7;
    private volatile Object serviceName_;
    /**
     * <code>string service_name = 7;</code>
     * @return The serviceName.
     */
    @Override
    public String getServiceName() {
      Object ref = serviceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        serviceName_ = s;
        return s;
      }
    }
    /**
     * <code>string service_name = 7;</code>
     * @return The bytes for serviceName.
     */
    @Override
    public com.google.protobuf.ByteString
        getServiceNameBytes() {
      Object ref = serviceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        serviceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INTERFACE_NAME_FIELD_NUMBER = 8;
    private volatile Object interfaceName_;
    /**
     * <code>string interface_name = 8;</code>
     * @return The interfaceName.
     */
    @Override
    public String getInterfaceName() {
      Object ref = interfaceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        interfaceName_ = s;
        return s;
      }
    }
    /**
     * <code>string interface_name = 8;</code>
     * @return The bytes for interfaceName.
     */
    @Override
    public com.google.protobuf.ByteString
        getInterfaceNameBytes() {
      Object ref = interfaceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        interfaceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INTERFACE_URI_FIELD_NUMBER = 9;
    private volatile Object interfaceUri_;
    /**
     * <code>string interface_uri = 9;</code>
     * @return The interfaceUri.
     */
    @Override
    public String getInterfaceUri() {
      Object ref = interfaceUri_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        interfaceUri_ = s;
        return s;
      }
    }
    /**
     * <code>string interface_uri = 9;</code>
     * @return The bytes for interfaceUri.
     */
    @Override
    public com.google.protobuf.ByteString
        getInterfaceUriBytes() {
      Object ref = interfaceUri_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        interfaceUri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KIND_FIELD_NUMBER = 10;
    private volatile Object kind_;
    /**
     * <code>string kind = 10;</code>
     * @return The kind.
     */
    @Override
    public String getKind() {
      Object ref = kind_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        kind_ = s;
        return s;
      }
    }
    /**
     * <code>string kind = 10;</code>
     * @return The bytes for kind.
     */
    @Override
    public com.google.protobuf.ByteString
        getKindBytes() {
      Object ref = kind_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        kind_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUBCALL_UUID_FIELD_NUMBER = 11;
    private volatile Object subcallUuid_;
    /**
     * <code>optional string subcall_uuid = 11;</code>
     * @return Whether the subcallUuid field is set.
     */
    @Override
    public boolean hasSubcallUuid() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string subcall_uuid = 11;</code>
     * @return The subcallUuid.
     */
    @Override
    public String getSubcallUuid() {
      Object ref = subcallUuid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        subcallUuid_ = s;
        return s;
      }
    }
    /**
     * <code>optional string subcall_uuid = 11;</code>
     * @return The bytes for subcallUuid.
     */
    @Override
    public com.google.protobuf.ByteString
        getSubcallUuidBytes() {
      Object ref = subcallUuid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        subcallUuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUBCALLS_FIELD_NUMBER = 16;
    private java.util.List<SubCall> subcalls_;
    /**
     * <code>repeated .SubCall subcalls = 16;</code>
     */
    @Override
    public java.util.List<SubCall> getSubcallsList() {
      return subcalls_;
    }
    /**
     * <code>repeated .SubCall subcalls = 16;</code>
     */
    @Override
    public java.util.List<? extends SubCallOrBuilder>
        getSubcallsOrBuilderList() {
      return subcalls_;
    }
    /**
     * <code>repeated .SubCall subcalls = 16;</code>
     */
    @Override
    public int getSubcallsCount() {
      return subcalls_.size();
    }
    /**
     * <code>repeated .SubCall subcalls = 16;</code>
     */
    @Override
    public SubCall getSubcalls(int index) {
      return subcalls_.get(index);
    }
    /**
     * <code>repeated .SubCall subcalls = 16;</code>
     */
    @Override
    public SubCallOrBuilder getSubcallsOrBuilder(
        int index) {
      return subcalls_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(traceId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, traceId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(spanId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, spanId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parentSpanId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, parentSpanId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(instanceUuid_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, instanceUuid_);
      }
      if (Double.doubleToRawLongBits(startTimeUnixNano_) != 0) {
        output.writeDouble(5, startTimeUnixNano_);
      }
      if (Double.doubleToRawLongBits(endTimeUnixNano_) != 0) {
        output.writeDouble(6, endTimeUnixNano_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, serviceName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(interfaceName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, interfaceName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(interfaceUri_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, interfaceUri_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kind_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, kind_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, subcallUuid_);
      }
      for (int i = 0; i < subcalls_.size(); i++) {
        output.writeMessage(16, subcalls_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(traceId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, traceId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(spanId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, spanId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parentSpanId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, parentSpanId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(instanceUuid_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, instanceUuid_);
      }
      if (Double.doubleToRawLongBits(startTimeUnixNano_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, startTimeUnixNano_);
      }
      if (Double.doubleToRawLongBits(endTimeUnixNano_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, endTimeUnixNano_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, serviceName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(interfaceName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, interfaceName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(interfaceUri_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, interfaceUri_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kind_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, kind_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, subcallUuid_);
      }
      for (int i = 0; i < subcalls_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, subcalls_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Span)) {
        return super.equals(obj);
      }
      Span other = (Span) obj;

      if (!getTraceId()
          .equals(other.getTraceId())) return false;
      if (!getSpanId()
          .equals(other.getSpanId())) return false;
      if (!getParentSpanId()
          .equals(other.getParentSpanId())) return false;
      if (!getInstanceUuid()
          .equals(other.getInstanceUuid())) return false;
      if (Double.doubleToLongBits(getStartTimeUnixNano())
          != Double.doubleToLongBits(
              other.getStartTimeUnixNano())) return false;
      if (Double.doubleToLongBits(getEndTimeUnixNano())
          != Double.doubleToLongBits(
              other.getEndTimeUnixNano())) return false;
      if (!getServiceName()
          .equals(other.getServiceName())) return false;
      if (!getInterfaceName()
          .equals(other.getInterfaceName())) return false;
      if (!getInterfaceUri()
          .equals(other.getInterfaceUri())) return false;
      if (!getKind()
          .equals(other.getKind())) return false;
      if (hasSubcallUuid() != other.hasSubcallUuid()) return false;
      if (hasSubcallUuid()) {
        if (!getSubcallUuid()
            .equals(other.getSubcallUuid())) return false;
      }
      if (!getSubcallsList()
          .equals(other.getSubcallsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TRACE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTraceId().hashCode();
      hash = (37 * hash) + SPAN_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSpanId().hashCode();
      hash = (37 * hash) + PARENT_SPAN_ID_FIELD_NUMBER;
      hash = (53 * hash) + getParentSpanId().hashCode();
      hash = (37 * hash) + INSTANCE_UUID_FIELD_NUMBER;
      hash = (53 * hash) + getInstanceUuid().hashCode();
      hash = (37 * hash) + START_TIME_UNIX_NANO_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getStartTimeUnixNano()));
      hash = (37 * hash) + END_TIME_UNIX_NANO_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getEndTimeUnixNano()));
      hash = (37 * hash) + SERVICE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getServiceName().hashCode();
      hash = (37 * hash) + INTERFACE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getInterfaceName().hashCode();
      hash = (37 * hash) + INTERFACE_URI_FIELD_NUMBER;
      hash = (53 * hash) + getInterfaceUri().hashCode();
      hash = (37 * hash) + KIND_FIELD_NUMBER;
      hash = (53 * hash) + getKind().hashCode();
      if (hasSubcallUuid()) {
        hash = (37 * hash) + SUBCALL_UUID_FIELD_NUMBER;
        hash = (53 * hash) + getSubcallUuid().hashCode();
      }
      if (getSubcallsCount() > 0) {
        hash = (37 * hash) + SUBCALLS_FIELD_NUMBER;
        hash = (53 * hash) + getSubcallsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Span parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Span parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Span parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Span parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Span parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Span parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Span parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Span parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Span parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Span parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Span parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Span parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Span prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Span}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Span)
        SpanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Trace.internal_static_Span_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Trace.internal_static_Span_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Span.class, Builder.class);
      }

      // Construct using Trace.Span.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSubcallsFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        traceId_ = "";

        spanId_ = "";

        parentSpanId_ = "";

        instanceUuid_ = "";

        startTimeUnixNano_ = 0D;

        endTimeUnixNano_ = 0D;

        serviceName_ = "";

        interfaceName_ = "";

        interfaceUri_ = "";

        kind_ = "";

        subcallUuid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (subcallsBuilder_ == null) {
          subcalls_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          subcallsBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Trace.internal_static_Span_descriptor;
      }

      @Override
      public Span getDefaultInstanceForType() {
        return Span.getDefaultInstance();
      }

      @Override
      public Span build() {
        Span result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Span buildPartial() {
        Span result = new Span(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.traceId_ = traceId_;
        result.spanId_ = spanId_;
        result.parentSpanId_ = parentSpanId_;
        result.instanceUuid_ = instanceUuid_;
        result.startTimeUnixNano_ = startTimeUnixNano_;
        result.endTimeUnixNano_ = endTimeUnixNano_;
        result.serviceName_ = serviceName_;
        result.interfaceName_ = interfaceName_;
        result.interfaceUri_ = interfaceUri_;
        result.kind_ = kind_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.subcallUuid_ = subcallUuid_;
        if (subcallsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            subcalls_ = java.util.Collections.unmodifiableList(subcalls_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.subcalls_ = subcalls_;
        } else {
          result.subcalls_ = subcallsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Span) {
          return mergeFrom((Span)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Span other) {
        if (other == Span.getDefaultInstance()) return this;
        if (!other.getTraceId().isEmpty()) {
          traceId_ = other.traceId_;
          onChanged();
        }
        if (!other.getSpanId().isEmpty()) {
          spanId_ = other.spanId_;
          onChanged();
        }
        if (!other.getParentSpanId().isEmpty()) {
          parentSpanId_ = other.parentSpanId_;
          onChanged();
        }
        if (!other.getInstanceUuid().isEmpty()) {
          instanceUuid_ = other.instanceUuid_;
          onChanged();
        }
        if (other.getStartTimeUnixNano() != 0D) {
          setStartTimeUnixNano(other.getStartTimeUnixNano());
        }
        if (other.getEndTimeUnixNano() != 0D) {
          setEndTimeUnixNano(other.getEndTimeUnixNano());
        }
        if (!other.getServiceName().isEmpty()) {
          serviceName_ = other.serviceName_;
          onChanged();
        }
        if (!other.getInterfaceName().isEmpty()) {
          interfaceName_ = other.interfaceName_;
          onChanged();
        }
        if (!other.getInterfaceUri().isEmpty()) {
          interfaceUri_ = other.interfaceUri_;
          onChanged();
        }
        if (!other.getKind().isEmpty()) {
          kind_ = other.kind_;
          onChanged();
        }
        if (other.hasSubcallUuid()) {
          bitField0_ |= 0x00000001;
          subcallUuid_ = other.subcallUuid_;
          onChanged();
        }
        if (subcallsBuilder_ == null) {
          if (!other.subcalls_.isEmpty()) {
            if (subcalls_.isEmpty()) {
              subcalls_ = other.subcalls_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSubcallsIsMutable();
              subcalls_.addAll(other.subcalls_);
            }
            onChanged();
          }
        } else {
          if (!other.subcalls_.isEmpty()) {
            if (subcallsBuilder_.isEmpty()) {
              subcallsBuilder_.dispose();
              subcallsBuilder_ = null;
              subcalls_ = other.subcalls_;
              bitField0_ = (bitField0_ & ~0x00000002);
              subcallsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSubcallsFieldBuilder() : null;
            } else {
              subcallsBuilder_.addAllMessages(other.subcalls_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Span parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Span) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object traceId_ = "";
      /**
       * <code>string trace_id = 1;</code>
       * @return The traceId.
       */
      public String getTraceId() {
        Object ref = traceId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          traceId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string trace_id = 1;</code>
       * @return The bytes for traceId.
       */
      public com.google.protobuf.ByteString
          getTraceIdBytes() {
        Object ref = traceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          traceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string trace_id = 1;</code>
       * @param value The traceId to set.
       * @return This builder for chaining.
       */
      public Builder setTraceId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        traceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string trace_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTraceId() {
        
        traceId_ = getDefaultInstance().getTraceId();
        onChanged();
        return this;
      }
      /**
       * <code>string trace_id = 1;</code>
       * @param value The bytes for traceId to set.
       * @return This builder for chaining.
       */
      public Builder setTraceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        traceId_ = value;
        onChanged();
        return this;
      }

      private Object spanId_ = "";
      /**
       * <code>string span_id = 2;</code>
       * @return The spanId.
       */
      public String getSpanId() {
        Object ref = spanId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          spanId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string span_id = 2;</code>
       * @return The bytes for spanId.
       */
      public com.google.protobuf.ByteString
          getSpanIdBytes() {
        Object ref = spanId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          spanId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string span_id = 2;</code>
       * @param value The spanId to set.
       * @return This builder for chaining.
       */
      public Builder setSpanId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        spanId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string span_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpanId() {
        
        spanId_ = getDefaultInstance().getSpanId();
        onChanged();
        return this;
      }
      /**
       * <code>string span_id = 2;</code>
       * @param value The bytes for spanId to set.
       * @return This builder for chaining.
       */
      public Builder setSpanIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        spanId_ = value;
        onChanged();
        return this;
      }

      private Object parentSpanId_ = "";
      /**
       * <code>string parent_span_id = 3;</code>
       * @return The parentSpanId.
       */
      public String getParentSpanId() {
        Object ref = parentSpanId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          parentSpanId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string parent_span_id = 3;</code>
       * @return The bytes for parentSpanId.
       */
      public com.google.protobuf.ByteString
          getParentSpanIdBytes() {
        Object ref = parentSpanId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          parentSpanId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string parent_span_id = 3;</code>
       * @param value The parentSpanId to set.
       * @return This builder for chaining.
       */
      public Builder setParentSpanId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        parentSpanId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string parent_span_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearParentSpanId() {
        
        parentSpanId_ = getDefaultInstance().getParentSpanId();
        onChanged();
        return this;
      }
      /**
       * <code>string parent_span_id = 3;</code>
       * @param value The bytes for parentSpanId to set.
       * @return This builder for chaining.
       */
      public Builder setParentSpanIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        parentSpanId_ = value;
        onChanged();
        return this;
      }

      private Object instanceUuid_ = "";
      /**
       * <code>string instance_uuid = 4;</code>
       * @return The instanceUuid.
       */
      public String getInstanceUuid() {
        Object ref = instanceUuid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          instanceUuid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string instance_uuid = 4;</code>
       * @return The bytes for instanceUuid.
       */
      public com.google.protobuf.ByteString
          getInstanceUuidBytes() {
        Object ref = instanceUuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          instanceUuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string instance_uuid = 4;</code>
       * @param value The instanceUuid to set.
       * @return This builder for chaining.
       */
      public Builder setInstanceUuid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        instanceUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string instance_uuid = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearInstanceUuid() {
        
        instanceUuid_ = getDefaultInstance().getInstanceUuid();
        onChanged();
        return this;
      }
      /**
       * <code>string instance_uuid = 4;</code>
       * @param value The bytes for instanceUuid to set.
       * @return This builder for chaining.
       */
      public Builder setInstanceUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        instanceUuid_ = value;
        onChanged();
        return this;
      }

      private double startTimeUnixNano_ ;
      /**
       * <code>double start_time_unix_nano = 5;</code>
       * @return The startTimeUnixNano.
       */
      @Override
      public double getStartTimeUnixNano() {
        return startTimeUnixNano_;
      }
      /**
       * <code>double start_time_unix_nano = 5;</code>
       * @param value The startTimeUnixNano to set.
       * @return This builder for chaining.
       */
      public Builder setStartTimeUnixNano(double value) {
        
        startTimeUnixNano_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double start_time_unix_nano = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartTimeUnixNano() {
        
        startTimeUnixNano_ = 0D;
        onChanged();
        return this;
      }

      private double endTimeUnixNano_ ;
      /**
       * <code>double end_time_unix_nano = 6;</code>
       * @return The endTimeUnixNano.
       */
      @Override
      public double getEndTimeUnixNano() {
        return endTimeUnixNano_;
      }
      /**
       * <code>double end_time_unix_nano = 6;</code>
       * @param value The endTimeUnixNano to set.
       * @return This builder for chaining.
       */
      public Builder setEndTimeUnixNano(double value) {
        
        endTimeUnixNano_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double end_time_unix_nano = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndTimeUnixNano() {
        
        endTimeUnixNano_ = 0D;
        onChanged();
        return this;
      }

      private Object serviceName_ = "";
      /**
       * <code>string service_name = 7;</code>
       * @return The serviceName.
       */
      public String getServiceName() {
        Object ref = serviceName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          serviceName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string service_name = 7;</code>
       * @return The bytes for serviceName.
       */
      public com.google.protobuf.ByteString
          getServiceNameBytes() {
        Object ref = serviceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          serviceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string service_name = 7;</code>
       * @param value The serviceName to set.
       * @return This builder for chaining.
       */
      public Builder setServiceName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serviceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string service_name = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearServiceName() {
        
        serviceName_ = getDefaultInstance().getServiceName();
        onChanged();
        return this;
      }
      /**
       * <code>string service_name = 7;</code>
       * @param value The bytes for serviceName to set.
       * @return This builder for chaining.
       */
      public Builder setServiceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        serviceName_ = value;
        onChanged();
        return this;
      }

      private Object interfaceName_ = "";
      /**
       * <code>string interface_name = 8;</code>
       * @return The interfaceName.
       */
      public String getInterfaceName() {
        Object ref = interfaceName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          interfaceName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string interface_name = 8;</code>
       * @return The bytes for interfaceName.
       */
      public com.google.protobuf.ByteString
          getInterfaceNameBytes() {
        Object ref = interfaceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          interfaceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string interface_name = 8;</code>
       * @param value The interfaceName to set.
       * @return This builder for chaining.
       */
      public Builder setInterfaceName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        interfaceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string interface_name = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearInterfaceName() {
        
        interfaceName_ = getDefaultInstance().getInterfaceName();
        onChanged();
        return this;
      }
      /**
       * <code>string interface_name = 8;</code>
       * @param value The bytes for interfaceName to set.
       * @return This builder for chaining.
       */
      public Builder setInterfaceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        interfaceName_ = value;
        onChanged();
        return this;
      }

      private Object interfaceUri_ = "";
      /**
       * <code>string interface_uri = 9;</code>
       * @return The interfaceUri.
       */
      public String getInterfaceUri() {
        Object ref = interfaceUri_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          interfaceUri_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string interface_uri = 9;</code>
       * @return The bytes for interfaceUri.
       */
      public com.google.protobuf.ByteString
          getInterfaceUriBytes() {
        Object ref = interfaceUri_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          interfaceUri_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string interface_uri = 9;</code>
       * @param value The interfaceUri to set.
       * @return This builder for chaining.
       */
      public Builder setInterfaceUri(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        interfaceUri_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string interface_uri = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearInterfaceUri() {
        
        interfaceUri_ = getDefaultInstance().getInterfaceUri();
        onChanged();
        return this;
      }
      /**
       * <code>string interface_uri = 9;</code>
       * @param value The bytes for interfaceUri to set.
       * @return This builder for chaining.
       */
      public Builder setInterfaceUriBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        interfaceUri_ = value;
        onChanged();
        return this;
      }

      private Object kind_ = "";
      /**
       * <code>string kind = 10;</code>
       * @return The kind.
       */
      public String getKind() {
        Object ref = kind_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          kind_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string kind = 10;</code>
       * @return The bytes for kind.
       */
      public com.google.protobuf.ByteString
          getKindBytes() {
        Object ref = kind_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          kind_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string kind = 10;</code>
       * @param value The kind to set.
       * @return This builder for chaining.
       */
      public Builder setKind(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        kind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string kind = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearKind() {
        
        kind_ = getDefaultInstance().getKind();
        onChanged();
        return this;
      }
      /**
       * <code>string kind = 10;</code>
       * @param value The bytes for kind to set.
       * @return This builder for chaining.
       */
      public Builder setKindBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        kind_ = value;
        onChanged();
        return this;
      }

      private Object subcallUuid_ = "";
      /**
       * <code>optional string subcall_uuid = 11;</code>
       * @return Whether the subcallUuid field is set.
       */
      public boolean hasSubcallUuid() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string subcall_uuid = 11;</code>
       * @return The subcallUuid.
       */
      public String getSubcallUuid() {
        Object ref = subcallUuid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          subcallUuid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string subcall_uuid = 11;</code>
       * @return The bytes for subcallUuid.
       */
      public com.google.protobuf.ByteString
          getSubcallUuidBytes() {
        Object ref = subcallUuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          subcallUuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string subcall_uuid = 11;</code>
       * @param value The subcallUuid to set.
       * @return This builder for chaining.
       */
      public Builder setSubcallUuid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        subcallUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string subcall_uuid = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubcallUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        subcallUuid_ = getDefaultInstance().getSubcallUuid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string subcall_uuid = 11;</code>
       * @param value The bytes for subcallUuid to set.
       * @return This builder for chaining.
       */
      public Builder setSubcallUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        bitField0_ |= 0x00000001;
        subcallUuid_ = value;
        onChanged();
        return this;
      }

      private java.util.List<SubCall> subcalls_ =
        java.util.Collections.emptyList();
      private void ensureSubcallsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          subcalls_ = new java.util.ArrayList<SubCall>(subcalls_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          SubCall, SubCall.Builder, SubCallOrBuilder> subcallsBuilder_;

      /**
       * <code>repeated .SubCall subcalls = 16;</code>
       */
      public java.util.List<SubCall> getSubcallsList() {
        if (subcallsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(subcalls_);
        } else {
          return subcallsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SubCall subcalls = 16;</code>
       */
      public int getSubcallsCount() {
        if (subcallsBuilder_ == null) {
          return subcalls_.size();
        } else {
          return subcallsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SubCall subcalls = 16;</code>
       */
      public SubCall getSubcalls(int index) {
        if (subcallsBuilder_ == null) {
          return subcalls_.get(index);
        } else {
          return subcallsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SubCall subcalls = 16;</code>
       */
      public Builder setSubcalls(
          int index, SubCall value) {
        if (subcallsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubcallsIsMutable();
          subcalls_.set(index, value);
          onChanged();
        } else {
          subcallsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SubCall subcalls = 16;</code>
       */
      public Builder setSubcalls(
          int index, SubCall.Builder builderForValue) {
        if (subcallsBuilder_ == null) {
          ensureSubcallsIsMutable();
          subcalls_.set(index, builderForValue.build());
          onChanged();
        } else {
          subcallsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SubCall subcalls = 16;</code>
       */
      public Builder addSubcalls(SubCall value) {
        if (subcallsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubcallsIsMutable();
          subcalls_.add(value);
          onChanged();
        } else {
          subcallsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SubCall subcalls = 16;</code>
       */
      public Builder addSubcalls(
          int index, SubCall value) {
        if (subcallsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubcallsIsMutable();
          subcalls_.add(index, value);
          onChanged();
        } else {
          subcallsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SubCall subcalls = 16;</code>
       */
      public Builder addSubcalls(
          SubCall.Builder builderForValue) {
        if (subcallsBuilder_ == null) {
          ensureSubcallsIsMutable();
          subcalls_.add(builderForValue.build());
          onChanged();
        } else {
          subcallsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SubCall subcalls = 16;</code>
       */
      public Builder addSubcalls(
          int index, SubCall.Builder builderForValue) {
        if (subcallsBuilder_ == null) {
          ensureSubcallsIsMutable();
          subcalls_.add(index, builderForValue.build());
          onChanged();
        } else {
          subcallsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SubCall subcalls = 16;</code>
       */
      public Builder addAllSubcalls(
          Iterable<? extends SubCall> values) {
        if (subcallsBuilder_ == null) {
          ensureSubcallsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, subcalls_);
          onChanged();
        } else {
          subcallsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SubCall subcalls = 16;</code>
       */
      public Builder clearSubcalls() {
        if (subcallsBuilder_ == null) {
          subcalls_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          subcallsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SubCall subcalls = 16;</code>
       */
      public Builder removeSubcalls(int index) {
        if (subcallsBuilder_ == null) {
          ensureSubcallsIsMutable();
          subcalls_.remove(index);
          onChanged();
        } else {
          subcallsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SubCall subcalls = 16;</code>
       */
      public SubCall.Builder getSubcallsBuilder(
          int index) {
        return getSubcallsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SubCall subcalls = 16;</code>
       */
      public SubCallOrBuilder getSubcallsOrBuilder(
          int index) {
        if (subcallsBuilder_ == null) {
          return subcalls_.get(index);  } else {
          return subcallsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SubCall subcalls = 16;</code>
       */
      public java.util.List<? extends SubCallOrBuilder>
           getSubcallsOrBuilderList() {
        if (subcallsBuilder_ != null) {
          return subcallsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(subcalls_);
        }
      }
      /**
       * <code>repeated .SubCall subcalls = 16;</code>
       */
      public SubCall.Builder addSubcallsBuilder() {
        return getSubcallsFieldBuilder().addBuilder(
            SubCall.getDefaultInstance());
      }
      /**
       * <code>repeated .SubCall subcalls = 16;</code>
       */
      public SubCall.Builder addSubcallsBuilder(
          int index) {
        return getSubcallsFieldBuilder().addBuilder(
            index, SubCall.getDefaultInstance());
      }
      /**
       * <code>repeated .SubCall subcalls = 16;</code>
       */
      public java.util.List<SubCall.Builder>
           getSubcallsBuilderList() {
        return getSubcallsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          SubCall, SubCall.Builder, SubCallOrBuilder>
          getSubcallsFieldBuilder() {
        if (subcallsBuilder_ == null) {
          subcallsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              SubCall, SubCall.Builder, SubCallOrBuilder>(
                  subcalls_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          subcalls_ = null;
        }
        return subcallsBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Span)
    }

    // @@protoc_insertion_point(class_scope:Span)
    private static final Span DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Span();
    }

    public static Span getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Span>
        PARSER = new com.google.protobuf.AbstractParser<Span>() {
      @Override
      public Span parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Span(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Span> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Span> getParserForType() {
      return PARSER;
    }

    @Override
    public Span getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TraceGraphOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TraceGraph)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .TraceNode root = 1;</code>
     * @return Whether the root field is set.
     */
    boolean hasRoot();
    /**
     * <code>optional .TraceNode root = 1;</code>
     * @return The root.
     */
    TraceNode getRoot();
    /**
     * <code>optional .TraceNode root = 1;</code>
     */
    TraceNodeOrBuilder getRootOrBuilder();

    /**
     * <code>repeated .TraceNode orphans = 2;</code>
     */
    java.util.List<TraceNode>
        getOrphansList();
    /**
     * <code>repeated .TraceNode orphans = 2;</code>
     */
    TraceNode getOrphans(int index);
    /**
     * <code>repeated .TraceNode orphans = 2;</code>
     */
    int getOrphansCount();
    /**
     * <code>repeated .TraceNode orphans = 2;</code>
     */
    java.util.List<? extends TraceNodeOrBuilder>
        getOrphansOrBuilderList();
    /**
     * <code>repeated .TraceNode orphans = 2;</code>
     */
    TraceNodeOrBuilder getOrphansOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code TraceGraph}
   */
  public static final class TraceGraph extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TraceGraph)
      TraceGraphOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TraceGraph.newBuilder() to construct.
    private TraceGraph(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TraceGraph() {
      orphans_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new TraceGraph();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TraceGraph(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              TraceNode.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = root_.toBuilder();
              }
              root_ = input.readMessage(TraceNode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(root_);
                root_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                orphans_ = new java.util.ArrayList<TraceNode>();
                mutable_bitField0_ |= 0x00000002;
              }
              orphans_.add(
                  input.readMessage(TraceNode.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          orphans_ = java.util.Collections.unmodifiableList(orphans_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Trace.internal_static_TraceGraph_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Trace.internal_static_TraceGraph_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TraceGraph.class, Builder.class);
    }

    private int bitField0_;
    public static final int ROOT_FIELD_NUMBER = 1;
    private TraceNode root_;
    /**
     * <code>optional .TraceNode root = 1;</code>
     * @return Whether the root field is set.
     */
    @Override
    public boolean hasRoot() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .TraceNode root = 1;</code>
     * @return The root.
     */
    @Override
    public TraceNode getRoot() {
      return root_ == null ? TraceNode.getDefaultInstance() : root_;
    }
    /**
     * <code>optional .TraceNode root = 1;</code>
     */
    @Override
    public TraceNodeOrBuilder getRootOrBuilder() {
      return root_ == null ? TraceNode.getDefaultInstance() : root_;
    }

    public static final int ORPHANS_FIELD_NUMBER = 2;
    private java.util.List<TraceNode> orphans_;
    /**
     * <code>repeated .TraceNode orphans = 2;</code>
     */
    @Override
    public java.util.List<TraceNode> getOrphansList() {
      return orphans_;
    }
    /**
     * <code>repeated .TraceNode orphans = 2;</code>
     */
    @Override
    public java.util.List<? extends TraceNodeOrBuilder>
        getOrphansOrBuilderList() {
      return orphans_;
    }
    /**
     * <code>repeated .TraceNode orphans = 2;</code>
     */
    @Override
    public int getOrphansCount() {
      return orphans_.size();
    }
    /**
     * <code>repeated .TraceNode orphans = 2;</code>
     */
    @Override
    public TraceNode getOrphans(int index) {
      return orphans_.get(index);
    }
    /**
     * <code>repeated .TraceNode orphans = 2;</code>
     */
    @Override
    public TraceNodeOrBuilder getOrphansOrBuilder(
        int index) {
      return orphans_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getRoot());
      }
      for (int i = 0; i < orphans_.size(); i++) {
        output.writeMessage(2, orphans_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRoot());
      }
      for (int i = 0; i < orphans_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, orphans_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TraceGraph)) {
        return super.equals(obj);
      }
      TraceGraph other = (TraceGraph) obj;

      if (hasRoot() != other.hasRoot()) return false;
      if (hasRoot()) {
        if (!getRoot()
            .equals(other.getRoot())) return false;
      }
      if (!getOrphansList()
          .equals(other.getOrphansList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRoot()) {
        hash = (37 * hash) + ROOT_FIELD_NUMBER;
        hash = (53 * hash) + getRoot().hashCode();
      }
      if (getOrphansCount() > 0) {
        hash = (37 * hash) + ORPHANS_FIELD_NUMBER;
        hash = (53 * hash) + getOrphansList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TraceGraph parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TraceGraph parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TraceGraph parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TraceGraph parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TraceGraph parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TraceGraph parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TraceGraph parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TraceGraph parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TraceGraph parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TraceGraph parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TraceGraph parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TraceGraph parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TraceGraph prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TraceGraph}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TraceGraph)
        TraceGraphOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Trace.internal_static_TraceGraph_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Trace.internal_static_TraceGraph_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TraceGraph.class, Builder.class);
      }

      // Construct using Trace.TraceGraph.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRootFieldBuilder();
          getOrphansFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (rootBuilder_ == null) {
          root_ = null;
        } else {
          rootBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (orphansBuilder_ == null) {
          orphans_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          orphansBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Trace.internal_static_TraceGraph_descriptor;
      }

      @Override
      public TraceGraph getDefaultInstanceForType() {
        return TraceGraph.getDefaultInstance();
      }

      @Override
      public TraceGraph build() {
        TraceGraph result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public TraceGraph buildPartial() {
        TraceGraph result = new TraceGraph(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (rootBuilder_ == null) {
            result.root_ = root_;
          } else {
            result.root_ = rootBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (orphansBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            orphans_ = java.util.Collections.unmodifiableList(orphans_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.orphans_ = orphans_;
        } else {
          result.orphans_ = orphansBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TraceGraph) {
          return mergeFrom((TraceGraph)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TraceGraph other) {
        if (other == TraceGraph.getDefaultInstance()) return this;
        if (other.hasRoot()) {
          mergeRoot(other.getRoot());
        }
        if (orphansBuilder_ == null) {
          if (!other.orphans_.isEmpty()) {
            if (orphans_.isEmpty()) {
              orphans_ = other.orphans_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureOrphansIsMutable();
              orphans_.addAll(other.orphans_);
            }
            onChanged();
          }
        } else {
          if (!other.orphans_.isEmpty()) {
            if (orphansBuilder_.isEmpty()) {
              orphansBuilder_.dispose();
              orphansBuilder_ = null;
              orphans_ = other.orphans_;
              bitField0_ = (bitField0_ & ~0x00000002);
              orphansBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOrphansFieldBuilder() : null;
            } else {
              orphansBuilder_.addAllMessages(other.orphans_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TraceGraph parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TraceGraph) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private TraceNode root_;
      private com.google.protobuf.SingleFieldBuilderV3<
          TraceNode, TraceNode.Builder, TraceNodeOrBuilder> rootBuilder_;
      /**
       * <code>optional .TraceNode root = 1;</code>
       * @return Whether the root field is set.
       */
      public boolean hasRoot() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .TraceNode root = 1;</code>
       * @return The root.
       */
      public TraceNode getRoot() {
        if (rootBuilder_ == null) {
          return root_ == null ? TraceNode.getDefaultInstance() : root_;
        } else {
          return rootBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TraceNode root = 1;</code>
       */
      public Builder setRoot(TraceNode value) {
        if (rootBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          root_ = value;
          onChanged();
        } else {
          rootBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TraceNode root = 1;</code>
       */
      public Builder setRoot(
          TraceNode.Builder builderForValue) {
        if (rootBuilder_ == null) {
          root_ = builderForValue.build();
          onChanged();
        } else {
          rootBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TraceNode root = 1;</code>
       */
      public Builder mergeRoot(TraceNode value) {
        if (rootBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              root_ != null &&
              root_ != TraceNode.getDefaultInstance()) {
            root_ =
              TraceNode.newBuilder(root_).mergeFrom(value).buildPartial();
          } else {
            root_ = value;
          }
          onChanged();
        } else {
          rootBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .TraceNode root = 1;</code>
       */
      public Builder clearRoot() {
        if (rootBuilder_ == null) {
          root_ = null;
          onChanged();
        } else {
          rootBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .TraceNode root = 1;</code>
       */
      public TraceNode.Builder getRootBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRootFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TraceNode root = 1;</code>
       */
      public TraceNodeOrBuilder getRootOrBuilder() {
        if (rootBuilder_ != null) {
          return rootBuilder_.getMessageOrBuilder();
        } else {
          return root_ == null ?
              TraceNode.getDefaultInstance() : root_;
        }
      }
      /**
       * <code>optional .TraceNode root = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TraceNode, TraceNode.Builder, TraceNodeOrBuilder>
          getRootFieldBuilder() {
        if (rootBuilder_ == null) {
          rootBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TraceNode, TraceNode.Builder, TraceNodeOrBuilder>(
                  getRoot(),
                  getParentForChildren(),
                  isClean());
          root_ = null;
        }
        return rootBuilder_;
      }

      private java.util.List<TraceNode> orphans_ =
        java.util.Collections.emptyList();
      private void ensureOrphansIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          orphans_ = new java.util.ArrayList<TraceNode>(orphans_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TraceNode, TraceNode.Builder, TraceNodeOrBuilder> orphansBuilder_;

      /**
       * <code>repeated .TraceNode orphans = 2;</code>
       */
      public java.util.List<TraceNode> getOrphansList() {
        if (orphansBuilder_ == null) {
          return java.util.Collections.unmodifiableList(orphans_);
        } else {
          return orphansBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TraceNode orphans = 2;</code>
       */
      public int getOrphansCount() {
        if (orphansBuilder_ == null) {
          return orphans_.size();
        } else {
          return orphansBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TraceNode orphans = 2;</code>
       */
      public TraceNode getOrphans(int index) {
        if (orphansBuilder_ == null) {
          return orphans_.get(index);
        } else {
          return orphansBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TraceNode orphans = 2;</code>
       */
      public Builder setOrphans(
          int index, TraceNode value) {
        if (orphansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOrphansIsMutable();
          orphans_.set(index, value);
          onChanged();
        } else {
          orphansBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TraceNode orphans = 2;</code>
       */
      public Builder setOrphans(
          int index, TraceNode.Builder builderForValue) {
        if (orphansBuilder_ == null) {
          ensureOrphansIsMutable();
          orphans_.set(index, builderForValue.build());
          onChanged();
        } else {
          orphansBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TraceNode orphans = 2;</code>
       */
      public Builder addOrphans(TraceNode value) {
        if (orphansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOrphansIsMutable();
          orphans_.add(value);
          onChanged();
        } else {
          orphansBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TraceNode orphans = 2;</code>
       */
      public Builder addOrphans(
          int index, TraceNode value) {
        if (orphansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOrphansIsMutable();
          orphans_.add(index, value);
          onChanged();
        } else {
          orphansBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TraceNode orphans = 2;</code>
       */
      public Builder addOrphans(
          TraceNode.Builder builderForValue) {
        if (orphansBuilder_ == null) {
          ensureOrphansIsMutable();
          orphans_.add(builderForValue.build());
          onChanged();
        } else {
          orphansBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TraceNode orphans = 2;</code>
       */
      public Builder addOrphans(
          int index, TraceNode.Builder builderForValue) {
        if (orphansBuilder_ == null) {
          ensureOrphansIsMutable();
          orphans_.add(index, builderForValue.build());
          onChanged();
        } else {
          orphansBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TraceNode orphans = 2;</code>
       */
      public Builder addAllOrphans(
          Iterable<? extends TraceNode> values) {
        if (orphansBuilder_ == null) {
          ensureOrphansIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, orphans_);
          onChanged();
        } else {
          orphansBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TraceNode orphans = 2;</code>
       */
      public Builder clearOrphans() {
        if (orphansBuilder_ == null) {
          orphans_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          orphansBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TraceNode orphans = 2;</code>
       */
      public Builder removeOrphans(int index) {
        if (orphansBuilder_ == null) {
          ensureOrphansIsMutable();
          orphans_.remove(index);
          onChanged();
        } else {
          orphansBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TraceNode orphans = 2;</code>
       */
      public TraceNode.Builder getOrphansBuilder(
          int index) {
        return getOrphansFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TraceNode orphans = 2;</code>
       */
      public TraceNodeOrBuilder getOrphansOrBuilder(
          int index) {
        if (orphansBuilder_ == null) {
          return orphans_.get(index);  } else {
          return orphansBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TraceNode orphans = 2;</code>
       */
      public java.util.List<? extends TraceNodeOrBuilder>
           getOrphansOrBuilderList() {
        if (orphansBuilder_ != null) {
          return orphansBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(orphans_);
        }
      }
      /**
       * <code>repeated .TraceNode orphans = 2;</code>
       */
      public TraceNode.Builder addOrphansBuilder() {
        return getOrphansFieldBuilder().addBuilder(
            TraceNode.getDefaultInstance());
      }
      /**
       * <code>repeated .TraceNode orphans = 2;</code>
       */
      public TraceNode.Builder addOrphansBuilder(
          int index) {
        return getOrphansFieldBuilder().addBuilder(
            index, TraceNode.getDefaultInstance());
      }
      /**
       * <code>repeated .TraceNode orphans = 2;</code>
       */
      public java.util.List<TraceNode.Builder>
           getOrphansBuilderList() {
        return getOrphansFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TraceNode, TraceNode.Builder, TraceNodeOrBuilder>
          getOrphansFieldBuilder() {
        if (orphansBuilder_ == null) {
          orphansBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TraceNode, TraceNode.Builder, TraceNodeOrBuilder>(
                  orphans_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          orphans_ = null;
        }
        return orphansBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TraceGraph)
    }

    // @@protoc_insertion_point(class_scope:TraceGraph)
    private static final TraceGraph DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TraceGraph();
    }

    public static TraceGraph getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TraceGraph>
        PARSER = new com.google.protobuf.AbstractParser<TraceGraph>() {
      @Override
      public TraceGraph parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TraceGraph(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TraceGraph> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<TraceGraph> getParserForType() {
      return PARSER;
    }

    @Override
    public TraceGraph getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TraceNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TraceNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.Span span = 1;</code>
     * @return Whether the span field is set.
     */
    boolean hasSpan();
    /**
     * <code>.Span span = 1;</code>
     * @return The span.
     */
    Span getSpan();
    /**
     * <code>.Span span = 1;</code>
     */
    SpanOrBuilder getSpanOrBuilder();

    /**
     * <code>repeated .TraceNode children = 2;</code>
     */
    java.util.List<TraceNode>
        getChildrenList();
    /**
     * <code>repeated .TraceNode children = 2;</code>
     */
    TraceNode getChildren(int index);
    /**
     * <code>repeated .TraceNode children = 2;</code>
     */
    int getChildrenCount();
    /**
     * <code>repeated .TraceNode children = 2;</code>
     */
    java.util.List<? extends TraceNodeOrBuilder>
        getChildrenOrBuilderList();
    /**
     * <code>repeated .TraceNode children = 2;</code>
     */
    TraceNodeOrBuilder getChildrenOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code TraceNode}
   */
  public static final class TraceNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TraceNode)
      TraceNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TraceNode.newBuilder() to construct.
    private TraceNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TraceNode() {
      children_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new TraceNode();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TraceNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              Span.Builder subBuilder = null;
              if (span_ != null) {
                subBuilder = span_.toBuilder();
              }
              span_ = input.readMessage(Span.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(span_);
                span_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                children_ = new java.util.ArrayList<TraceNode>();
                mutable_bitField0_ |= 0x00000001;
              }
              children_.add(
                  input.readMessage(TraceNode.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          children_ = java.util.Collections.unmodifiableList(children_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Trace.internal_static_TraceNode_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Trace.internal_static_TraceNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TraceNode.class, Builder.class);
    }

    public static final int SPAN_FIELD_NUMBER = 1;
    private Span span_;
    /**
     * <code>.Span span = 1;</code>
     * @return Whether the span field is set.
     */
    @Override
    public boolean hasSpan() {
      return span_ != null;
    }
    /**
     * <code>.Span span = 1;</code>
     * @return The span.
     */
    @Override
    public Span getSpan() {
      return span_ == null ? Span.getDefaultInstance() : span_;
    }
    /**
     * <code>.Span span = 1;</code>
     */
    @Override
    public SpanOrBuilder getSpanOrBuilder() {
      return getSpan();
    }

    public static final int CHILDREN_FIELD_NUMBER = 2;
    private java.util.List<TraceNode> children_;
    /**
     * <code>repeated .TraceNode children = 2;</code>
     */
    @Override
    public java.util.List<TraceNode> getChildrenList() {
      return children_;
    }
    /**
     * <code>repeated .TraceNode children = 2;</code>
     */
    @Override
    public java.util.List<? extends TraceNodeOrBuilder>
        getChildrenOrBuilderList() {
      return children_;
    }
    /**
     * <code>repeated .TraceNode children = 2;</code>
     */
    @Override
    public int getChildrenCount() {
      return children_.size();
    }
    /**
     * <code>repeated .TraceNode children = 2;</code>
     */
    @Override
    public TraceNode getChildren(int index) {
      return children_.get(index);
    }
    /**
     * <code>repeated .TraceNode children = 2;</code>
     */
    @Override
    public TraceNodeOrBuilder getChildrenOrBuilder(
        int index) {
      return children_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (span_ != null) {
        output.writeMessage(1, getSpan());
      }
      for (int i = 0; i < children_.size(); i++) {
        output.writeMessage(2, children_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (span_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSpan());
      }
      for (int i = 0; i < children_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, children_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TraceNode)) {
        return super.equals(obj);
      }
      TraceNode other = (TraceNode) obj;

      if (hasSpan() != other.hasSpan()) return false;
      if (hasSpan()) {
        if (!getSpan()
            .equals(other.getSpan())) return false;
      }
      if (!getChildrenList()
          .equals(other.getChildrenList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSpan()) {
        hash = (37 * hash) + SPAN_FIELD_NUMBER;
        hash = (53 * hash) + getSpan().hashCode();
      }
      if (getChildrenCount() > 0) {
        hash = (37 * hash) + CHILDREN_FIELD_NUMBER;
        hash = (53 * hash) + getChildrenList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TraceNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TraceNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TraceNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TraceNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TraceNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TraceNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TraceNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TraceNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TraceNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TraceNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TraceNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TraceNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TraceNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TraceNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TraceNode)
        TraceNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Trace.internal_static_TraceNode_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Trace.internal_static_TraceNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TraceNode.class, Builder.class);
      }

      // Construct using Trace.TraceNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getChildrenFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (spanBuilder_ == null) {
          span_ = null;
        } else {
          span_ = null;
          spanBuilder_ = null;
        }
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          childrenBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Trace.internal_static_TraceNode_descriptor;
      }

      @Override
      public TraceNode getDefaultInstanceForType() {
        return TraceNode.getDefaultInstance();
      }

      @Override
      public TraceNode build() {
        TraceNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public TraceNode buildPartial() {
        TraceNode result = new TraceNode(this);
        int from_bitField0_ = bitField0_;
        if (spanBuilder_ == null) {
          result.span_ = span_;
        } else {
          result.span_ = spanBuilder_.build();
        }
        if (childrenBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            children_ = java.util.Collections.unmodifiableList(children_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.children_ = children_;
        } else {
          result.children_ = childrenBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TraceNode) {
          return mergeFrom((TraceNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TraceNode other) {
        if (other == TraceNode.getDefaultInstance()) return this;
        if (other.hasSpan()) {
          mergeSpan(other.getSpan());
        }
        if (childrenBuilder_ == null) {
          if (!other.children_.isEmpty()) {
            if (children_.isEmpty()) {
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureChildrenIsMutable();
              children_.addAll(other.children_);
            }
            onChanged();
          }
        } else {
          if (!other.children_.isEmpty()) {
            if (childrenBuilder_.isEmpty()) {
              childrenBuilder_.dispose();
              childrenBuilder_ = null;
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x00000001);
              childrenBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChildrenFieldBuilder() : null;
            } else {
              childrenBuilder_.addAllMessages(other.children_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TraceNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TraceNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Span span_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Span, Span.Builder, SpanOrBuilder> spanBuilder_;
      /**
       * <code>.Span span = 1;</code>
       * @return Whether the span field is set.
       */
      public boolean hasSpan() {
        return spanBuilder_ != null || span_ != null;
      }
      /**
       * <code>.Span span = 1;</code>
       * @return The span.
       */
      public Span getSpan() {
        if (spanBuilder_ == null) {
          return span_ == null ? Span.getDefaultInstance() : span_;
        } else {
          return spanBuilder_.getMessage();
        }
      }
      /**
       * <code>.Span span = 1;</code>
       */
      public Builder setSpan(Span value) {
        if (spanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          span_ = value;
          onChanged();
        } else {
          spanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Span span = 1;</code>
       */
      public Builder setSpan(
          Span.Builder builderForValue) {
        if (spanBuilder_ == null) {
          span_ = builderForValue.build();
          onChanged();
        } else {
          spanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Span span = 1;</code>
       */
      public Builder mergeSpan(Span value) {
        if (spanBuilder_ == null) {
          if (span_ != null) {
            span_ =
              Span.newBuilder(span_).mergeFrom(value).buildPartial();
          } else {
            span_ = value;
          }
          onChanged();
        } else {
          spanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Span span = 1;</code>
       */
      public Builder clearSpan() {
        if (spanBuilder_ == null) {
          span_ = null;
          onChanged();
        } else {
          span_ = null;
          spanBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Span span = 1;</code>
       */
      public Span.Builder getSpanBuilder() {
        
        onChanged();
        return getSpanFieldBuilder().getBuilder();
      }
      /**
       * <code>.Span span = 1;</code>
       */
      public SpanOrBuilder getSpanOrBuilder() {
        if (spanBuilder_ != null) {
          return spanBuilder_.getMessageOrBuilder();
        } else {
          return span_ == null ?
              Span.getDefaultInstance() : span_;
        }
      }
      /**
       * <code>.Span span = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Span, Span.Builder, SpanOrBuilder>
          getSpanFieldBuilder() {
        if (spanBuilder_ == null) {
          spanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Span, Span.Builder, SpanOrBuilder>(
                  getSpan(),
                  getParentForChildren(),
                  isClean());
          span_ = null;
        }
        return spanBuilder_;
      }

      private java.util.List<TraceNode> children_ =
        java.util.Collections.emptyList();
      private void ensureChildrenIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          children_ = new java.util.ArrayList<TraceNode>(children_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TraceNode, Builder, TraceNodeOrBuilder> childrenBuilder_;

      /**
       * <code>repeated .TraceNode children = 2;</code>
       */
      public java.util.List<TraceNode> getChildrenList() {
        if (childrenBuilder_ == null) {
          return java.util.Collections.unmodifiableList(children_);
        } else {
          return childrenBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TraceNode children = 2;</code>
       */
      public int getChildrenCount() {
        if (childrenBuilder_ == null) {
          return children_.size();
        } else {
          return childrenBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TraceNode children = 2;</code>
       */
      public TraceNode getChildren(int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);
        } else {
          return childrenBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TraceNode children = 2;</code>
       */
      public Builder setChildren(
          int index, TraceNode value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.set(index, value);
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TraceNode children = 2;</code>
       */
      public Builder setChildren(
          int index, Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.set(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TraceNode children = 2;</code>
       */
      public Builder addChildren(TraceNode value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TraceNode children = 2;</code>
       */
      public Builder addChildren(
          int index, TraceNode value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(index, value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TraceNode children = 2;</code>
       */
      public Builder addChildren(
          Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TraceNode children = 2;</code>
       */
      public Builder addChildren(
          int index, Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TraceNode children = 2;</code>
       */
      public Builder addAllChildren(
          Iterable<? extends TraceNode> values) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, children_);
          onChanged();
        } else {
          childrenBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TraceNode children = 2;</code>
       */
      public Builder clearChildren() {
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          childrenBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TraceNode children = 2;</code>
       */
      public Builder removeChildren(int index) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.remove(index);
          onChanged();
        } else {
          childrenBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TraceNode children = 2;</code>
       */
      public Builder getChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TraceNode children = 2;</code>
       */
      public TraceNodeOrBuilder getChildrenOrBuilder(
          int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);  } else {
          return childrenBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TraceNode children = 2;</code>
       */
      public java.util.List<? extends TraceNodeOrBuilder>
           getChildrenOrBuilderList() {
        if (childrenBuilder_ != null) {
          return childrenBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(children_);
        }
      }
      /**
       * <code>repeated .TraceNode children = 2;</code>
       */
      public Builder addChildrenBuilder() {
        return getChildrenFieldBuilder().addBuilder(
            TraceNode.getDefaultInstance());
      }
      /**
       * <code>repeated .TraceNode children = 2;</code>
       */
      public Builder addChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder().addBuilder(
            index, TraceNode.getDefaultInstance());
      }
      /**
       * <code>repeated .TraceNode children = 2;</code>
       */
      public java.util.List<Builder>
           getChildrenBuilderList() {
        return getChildrenFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TraceNode, Builder, TraceNodeOrBuilder>
          getChildrenFieldBuilder() {
        if (childrenBuilder_ == null) {
          childrenBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TraceNode, Builder, TraceNodeOrBuilder>(
                  children_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          children_ = null;
        }
        return childrenBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TraceNode)
    }

    // @@protoc_insertion_point(class_scope:TraceNode)
    private static final TraceNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TraceNode();
    }

    public static TraceNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TraceNode>
        PARSER = new com.google.protobuf.AbstractParser<TraceNode>() {
      @Override
      public TraceNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TraceNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TraceNode> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<TraceNode> getParserForType() {
      return PARSER;
    }

    @Override
    public TraceNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SubCall_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SubCall_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Span_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Span_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TraceGraph_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TraceGraph_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TraceNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TraceNode_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\013trace.proto\"\236\001\n\007SubCall\022\024\n\014subcall_uui" +
      "d\030\001 \001(\t\022\034\n\024start_time_unix_nano\030\002 \001(\001\022\032\n" +
      "\022end_time_unix_nano\030\003 \001(\001\022\024\n\014service_nam" +
      "e\030\004 \001(\t\022\026\n\016interface_name\030\005 \001(\t\022\025\n\rinter" +
      "face_uri\030\006 \001(\t\"\255\002\n\004Span\022\020\n\010trace_id\030\001 \001(" +
      "\t\022\017\n\007span_id\030\002 \001(\t\022\026\n\016parent_span_id\030\003 \001" +
      "(\t\022\025\n\rinstance_uuid\030\004 \001(\t\022\034\n\024start_time_" +
      "unix_nano\030\005 \001(\001\022\032\n\022end_time_unix_nano\030\006 " +
      "\001(\001\022\024\n\014service_name\030\007 \001(\t\022\026\n\016interface_n" +
      "ame\030\010 \001(\t\022\025\n\rinterface_uri\030\t \001(\t\022\014\n\004kind" +
      "\030\n \001(\t\022\031\n\014subcall_uuid\030\013 \001(\tH\000\210\001\001\022\032\n\010sub" +
      "calls\030\020 \003(\0132\010.SubCallB\017\n\r_subcall_uuid\"Q" +
      "\n\nTraceGraph\022\035\n\004root\030\001 \001(\0132\n.TraceNodeH\000" +
      "\210\001\001\022\033\n\007orphans\030\002 \003(\0132\n.TraceNodeB\007\n\005_roo" +
      "t\">\n\tTraceNode\022\023\n\004span\030\001 \001(\0132\005.Span\022\034\n\010c" +
      "hildren\030\002 \003(\0132\n.TraceNodeb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_SubCall_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SubCall_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SubCall_descriptor,
        new String[] { "SubcallUuid", "StartTimeUnixNano", "EndTimeUnixNano", "ServiceName", "InterfaceName", "InterfaceUri", });
    internal_static_Span_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Span_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Span_descriptor,
        new String[] { "TraceId", "SpanId", "ParentSpanId", "InstanceUuid", "StartTimeUnixNano", "EndTimeUnixNano", "ServiceName", "InterfaceName", "InterfaceUri", "Kind", "SubcallUuid", "Subcalls", "SubcallUuid", });
    internal_static_TraceGraph_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_TraceGraph_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TraceGraph_descriptor,
        new String[] { "Root", "Orphans", "Root", });
    internal_static_TraceNode_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_TraceNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TraceNode_descriptor,
        new String[] { "Span", "Children", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
